version: '3.8'

networks:
  web:
    external: true
  electra-${ENVIRONMENT}:
    driver: bridge

volumes:
  postgres_data_${ENVIRONMENT}:

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: electra-frontend-${ENVIRONMENT}
    env_file:
      - .env
    environment:
      - VITE_API_BASE_URL=//api.${DOMAIN}
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.electra-frontend-${ENVIRONMENT}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.electra-frontend-${ENVIRONMENT}.entrypoints=websecure"
      - "traefik.http.routers.electra-frontend-${ENVIRONMENT}.tls=true"
      - "traefik.http.routers.electra-frontend-${ENVIRONMENT}.tls.certresolver=cloudflare"
      - "traefik.http.routers.electra-frontend-${ENVIRONMENT}.middlewares=auth-admin@docker"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - web                       # nur öffentliches Netz

  # -- B) BACKEND --
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: electra-backend-${ENVIRONMENT}
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/electra
      - ENVIRONMENT=production
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        python -c 'import psycopg2; conn = 
          psycopg2.connect(\"dbname=electra user=postgres password=postgres host=db\"); 
          cur = conn.cursor(); 
          cur.execute(\"SELECT EXISTS (
            SELECT FROM information_schema.tables WHERE table_name = \'wahl\'
          )\"); 
          exit(0 if cur.fetchone()[0] else 1)'
        && echo \"DB ready\"
        || (echo \"Initializing DB…\" && python database-tools/scripts/setup_database.py)
        && python run_server.py dev
      "
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.electra-backend-${ENVIRONMENT}.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.electra-backend-${ENVIRONMENT}.entrypoints=websecure"
      - "traefik.http.routers.electra-backend-${ENVIRONMENT}.tls=true"
      - "traefik.http.routers.electra-backend-${ENVIRONMENT}.tls.certresolver=cloudflare"
    volumes:
      - ./backend:/app
      - ./backend/database-tools:/app/database-tools
      - ./backend/database-tools/sitzverteilung:/app/database-tools/sitzverteilung
      - ./backend/database-tools/topTen:/app/database-tools/topTen
    networks:
      - web                       # damit Traefik den Service erreicht
      - electra-${ENVIRONMENT}    # privates Netz, in dem nur Backend+DB hängen

  # -- C) DB --
  db:
    image: postgres:17.1
    container_name: electra-db-${ENVIRONMENT}
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=electra
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_${ENVIRONMENT}:/var/lib/postgresql/data
    networks:
      - electra-${ENVIRONMENT}