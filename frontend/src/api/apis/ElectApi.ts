/* tslint:disable */
/* eslint-disable */
/**
 * Bundestagswahlsystem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthenticationDetails,
  Direktkandidaten,
  ParteiWahlzettel,
  SessionToken,
} from '../models/index';
import {
    AuthenticationDetailsFromJSON,
    AuthenticationDetailsToJSON,
    DirektkandidatenFromJSON,
    DirektkandidatenToJSON,
    ParteiWahlzettelFromJSON,
    ParteiWahlzettelToJSON,
    SessionTokenFromJSON,
    SessionTokenToJSON,
} from '../models/index';

export interface ElectWahlidAuthenticateWahlkreisidPostRequest {
    wahlid: number;
    wahlkreisid: number;
    authenticationDetails: AuthenticationDetails;
}

export interface GetCompetingPartiesRequest {
    wahlid: number;
    wahlkreisid: number;
}

export interface GetDirektkandidatenRequest {
    wahlid: number;
    wahlkreisid: number;
}

/**
 * 
 */
export class ElectApi extends runtime.BaseAPI {

    /**
     * Authenticate with token
     */
    async electWahlidAuthenticateWahlkreisidPostRaw(requestParameters: ElectWahlidAuthenticateWahlkreisidPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SessionToken>> {
        if (requestParameters['wahlid'] == null) {
            throw new runtime.RequiredError(
                'wahlid',
                'Required parameter "wahlid" was null or undefined when calling electWahlidAuthenticateWahlkreisidPost().'
            );
        }

        if (requestParameters['wahlkreisid'] == null) {
            throw new runtime.RequiredError(
                'wahlkreisid',
                'Required parameter "wahlkreisid" was null or undefined when calling electWahlidAuthenticateWahlkreisidPost().'
            );
        }

        if (requestParameters['authenticationDetails'] == null) {
            throw new runtime.RequiredError(
                'authenticationDetails',
                'Required parameter "authenticationDetails" was null or undefined when calling electWahlidAuthenticateWahlkreisidPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/elect/{wahlid}/authenticate/{wahlkreisid}`.replace(`{${"wahlid"}}`, encodeURIComponent(String(requestParameters['wahlid']))).replace(`{${"wahlkreisid"}}`, encodeURIComponent(String(requestParameters['wahlkreisid']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthenticationDetailsToJSON(requestParameters['authenticationDetails']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SessionTokenFromJSON(jsonValue));
    }

    /**
     * Authenticate with token
     */
    async electWahlidAuthenticateWahlkreisidPost(requestParameters: ElectWahlidAuthenticateWahlkreisidPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SessionToken> {
        const response = await this.electWahlidAuthenticateWahlkreisidPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getCompetingPartiesRaw(requestParameters: GetCompetingPartiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ParteiWahlzettel>> {
        if (requestParameters['wahlid'] == null) {
            throw new runtime.RequiredError(
                'wahlid',
                'Required parameter "wahlid" was null or undefined when calling getCompetingParties().'
            );
        }

        if (requestParameters['wahlkreisid'] == null) {
            throw new runtime.RequiredError(
                'wahlkreisid',
                'Required parameter "wahlkreisid" was null or undefined when calling getCompetingParties().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/elect/{wahlid}/parteien/{wahlkreisid}`.replace(`{${"wahlid"}}`, encodeURIComponent(String(requestParameters['wahlid']))).replace(`{${"wahlkreisid"}}`, encodeURIComponent(String(requestParameters['wahlkreisid']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ParteiWahlzettelFromJSON(jsonValue));
    }

    /**
     */
    async getCompetingParties(requestParameters: GetCompetingPartiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ParteiWahlzettel> {
        const response = await this.getCompetingPartiesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getDirektkandidatenRaw(requestParameters: GetDirektkandidatenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Direktkandidaten>> {
        if (requestParameters['wahlid'] == null) {
            throw new runtime.RequiredError(
                'wahlid',
                'Required parameter "wahlid" was null or undefined when calling getDirektkandidaten().'
            );
        }

        if (requestParameters['wahlkreisid'] == null) {
            throw new runtime.RequiredError(
                'wahlkreisid',
                'Required parameter "wahlkreisid" was null or undefined when calling getDirektkandidaten().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/elect/{wahlid}/direktkandidaten/{wahlkreisid}`.replace(`{${"wahlid"}}`, encodeURIComponent(String(requestParameters['wahlid']))).replace(`{${"wahlkreisid"}}`, encodeURIComponent(String(requestParameters['wahlkreisid']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DirektkandidatenFromJSON(jsonValue));
    }

    /**
     */
    async getDirektkandidaten(requestParameters: GetDirektkandidatenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Direktkandidaten> {
        const response = await this.getDirektkandidatenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
