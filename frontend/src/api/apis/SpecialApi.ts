/* tslint:disable */
/* eslint-disable */
/**
 * Donator-Mainframe communication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ClosestWinners,
  OverviewWahlkreis,
} from '../models/index';
import {
    ClosestWinnersFromJSON,
    ClosestWinnersToJSON,
    OverviewWahlkreisFromJSON,
    OverviewWahlkreisToJSON,
} from '../models/index';

export interface GetClosestWinnersRequest {
    wahlid: number;
}

export interface GetOverviewWahlkreisRequest {
    wahlid: number;
    wahlkreisid: number;
    generatefromaggregate?: boolean;
}

/**
 * 
 */
export class SpecialApi extends runtime.BaseAPI {

    /**
     */
    async getClosestWinnersRaw(requestParameters: GetClosestWinnersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ClosestWinners>>> {
        if (requestParameters['wahlid'] == null) {
            throw new runtime.RequiredError(
                'wahlid',
                'Required parameter "wahlid" was null or undefined when calling getClosestWinners().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/results/{wahlid}/closestwinners`.replace(`{${"wahlid"}}`, encodeURIComponent(String(requestParameters['wahlid']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ClosestWinnersFromJSON));
    }

    /**
     */
    async getClosestWinners(requestParameters: GetClosestWinnersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ClosestWinners>> {
        const response = await this.getClosestWinnersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getOverviewWahlkreisRaw(requestParameters: GetOverviewWahlkreisRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OverviewWahlkreis>> {
        if (requestParameters['wahlid'] == null) {
            throw new runtime.RequiredError(
                'wahlid',
                'Required parameter "wahlid" was null or undefined when calling getOverviewWahlkreis().'
            );
        }

        if (requestParameters['wahlkreisid'] == null) {
            throw new runtime.RequiredError(
                'wahlkreisid',
                'Required parameter "wahlkreisid" was null or undefined when calling getOverviewWahlkreis().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['generatefromaggregate'] != null) {
            queryParameters['generatefromaggregate'] = requestParameters['generatefromaggregate'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/results/{wahlid}/overview/wahlkreis/{wahlkreisid}`.replace(`{${"wahlid"}}`, encodeURIComponent(String(requestParameters['wahlid']))).replace(`{${"wahlkreisid"}}`, encodeURIComponent(String(requestParameters['wahlkreisid']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OverviewWahlkreisFromJSON(jsonValue));
    }

    /**
     */
    async getOverviewWahlkreis(requestParameters: GetOverviewWahlkreisRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OverviewWahlkreis> {
        const response = await this.getOverviewWahlkreisRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
