/* tslint:disable */
/* eslint-disable */
/**
 * Bundestagswahlsystem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Abgeordneter } from './Abgeordneter';
import {
    AbgeordneterFromJSON,
    AbgeordneterFromJSONTyped,
    AbgeordneterToJSON,
    AbgeordneterToJSONTyped,
} from './Abgeordneter';
import type { Partei } from './Partei';
import {
    ParteiFromJSON,
    ParteiFromJSONTyped,
    ParteiToJSON,
    ParteiToJSONTyped,
} from './Partei';

/**
 * 
 * @export
 * @interface ParteiWahlzettelParteienInner
 */
export interface ParteiWahlzettelParteienInner {
    /**
     * 
     * @type {Partei}
     * @memberof ParteiWahlzettelParteienInner
     */
    partei: Partei;
    /**
     * 
     * @type {Array<Abgeordneter>}
     * @memberof ParteiWahlzettelParteienInner
     */
    topfive: Array<Abgeordneter>;
}

/**
 * Check if a given object implements the ParteiWahlzettelParteienInner interface.
 */
export function instanceOfParteiWahlzettelParteienInner(value: object): value is ParteiWahlzettelParteienInner {
    if (!('partei' in value) || value['partei'] === undefined) return false;
    if (!('topfive' in value) || value['topfive'] === undefined) return false;
    return true;
}

export function ParteiWahlzettelParteienInnerFromJSON(json: any): ParteiWahlzettelParteienInner {
    return ParteiWahlzettelParteienInnerFromJSONTyped(json, false);
}

export function ParteiWahlzettelParteienInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParteiWahlzettelParteienInner {
    if (json == null) {
        return json;
    }
    return {
        
        'partei': ParteiFromJSON(json['partei']),
        'topfive': ((json['topfive'] as Array<any>).map(AbgeordneterFromJSON)),
    };
}

export function ParteiWahlzettelParteienInnerToJSON(json: any): ParteiWahlzettelParteienInner {
    return ParteiWahlzettelParteienInnerToJSONTyped(json, false);
}

export function ParteiWahlzettelParteienInnerToJSONTyped(value?: ParteiWahlzettelParteienInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'partei': ParteiToJSON(value['partei']),
        'topfive': ((value['topfive'] as Array<any>).map(AbgeordneterToJSON)),
    };
}

