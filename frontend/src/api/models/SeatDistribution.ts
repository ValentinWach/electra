/* tslint:disable */
/* eslint-disable */
/**
 * Donator-Mainframe communication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SeatDistributionDistributionInner } from './SeatDistributionDistributionInner';
import {
    SeatDistributionDistributionInnerFromJSON,
    SeatDistributionDistributionInnerFromJSONTyped,
    SeatDistributionDistributionInnerToJSON,
    SeatDistributionDistributionInnerToJSONTyped,
} from './SeatDistributionDistributionInner';

/**
 * 
 * @export
 * @interface SeatDistribution
 */
export interface SeatDistribution {
    /**
     * 
     * @type {Array<SeatDistributionDistributionInner>}
     * @memberof SeatDistribution
     */
    distribution: Array<SeatDistributionDistributionInner>;
    /**
     * 
     * @type {number}
     * @memberof SeatDistribution
     */
    numberofseats: number;
}

/**
 * Check if a given object implements the SeatDistribution interface.
 */
export function instanceOfSeatDistribution(value: object): value is SeatDistribution {
    if (!('distribution' in value) || value['distribution'] === undefined) return false;
    if (!('numberofseats' in value) || value['numberofseats'] === undefined) return false;
    return true;
}

export function SeatDistributionFromJSON(json: any): SeatDistribution {
    return SeatDistributionFromJSONTyped(json, false);
}

export function SeatDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeatDistribution {
    if (json == null) {
        return json;
    }
    return {
        
        'distribution': ((json['distribution'] as Array<any>).map(SeatDistributionDistributionInnerFromJSON)),
        'numberofseats': json['numberofseats'],
    };
}

export function SeatDistributionToJSON(json: any): SeatDistribution {
    return SeatDistributionToJSONTyped(json, false);
}

export function SeatDistributionToJSONTyped(value?: SeatDistribution | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'distribution': ((value['distribution'] as Array<any>).map(SeatDistributionDistributionInnerToJSON)),
        'numberofseats': value['numberofseats'],
    };
}

