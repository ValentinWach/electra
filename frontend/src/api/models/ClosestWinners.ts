/* tslint:disable */
/* eslint-disable */
/**
 * Donator-Mainframe communication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClosestWinner } from './ClosestWinner';
import {
    ClosestWinnerFromJSON,
    ClosestWinnerFromJSONTyped,
    ClosestWinnerToJSON,
    ClosestWinnerToJSONTyped,
} from './ClosestWinner';
import type { Partei } from './Partei';
import {
    ParteiFromJSON,
    ParteiFromJSONTyped,
    ParteiToJSON,
    ParteiToJSONTyped,
} from './Partei';

/**
 * 
 * @export
 * @interface ClosestWinners
 */
export interface ClosestWinners {
    /**
     * 
     * @type {Partei}
     * @memberof ClosestWinners
     */
    party: Partei;
    /**
     * 
     * @type {string}
     * @memberof ClosestWinners
     */
    closestType: ClosestWinnersClosestTypeEnum;
    /**
     * 
     * @type {Array<ClosestWinner>}
     * @memberof ClosestWinners
     */
    closestWinners?: Array<ClosestWinner>;
}


/**
 * @export
 */
export const ClosestWinnersClosestTypeEnum = {
    Winner: 'Winner',
    Loser: 'Loser'
} as const;
export type ClosestWinnersClosestTypeEnum = typeof ClosestWinnersClosestTypeEnum[keyof typeof ClosestWinnersClosestTypeEnum];


/**
 * Check if a given object implements the ClosestWinners interface.
 */
export function instanceOfClosestWinners(value: object): value is ClosestWinners {
    if (!('party' in value) || value['party'] === undefined) return false;
    if (!('closestType' in value) || value['closestType'] === undefined) return false;
    return true;
}

export function ClosestWinnersFromJSON(json: any): ClosestWinners {
    return ClosestWinnersFromJSONTyped(json, false);
}

export function ClosestWinnersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClosestWinners {
    if (json == null) {
        return json;
    }
    return {
        
        'party': ParteiFromJSON(json['party']),
        'closestType': json['closest_type'],
        'closestWinners': json['ClosestWinners'] == null ? undefined : ((json['ClosestWinners'] as Array<any>).map(ClosestWinnerFromJSON)),
    };
}

export function ClosestWinnersToJSON(json: any): ClosestWinners {
    return ClosestWinnersToJSONTyped(json, false);
}

export function ClosestWinnersToJSONTyped(value?: ClosestWinners | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'party': ParteiToJSON(value['party']),
        'closest_type': value['closestType'],
        'ClosestWinners': value['closestWinners'] == null ? undefined : ((value['closestWinners'] as Array<any>).map(ClosestWinnerToJSON)),
    };
}

