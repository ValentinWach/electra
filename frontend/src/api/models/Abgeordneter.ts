/* tslint:disable */
/* eslint-disable */
/**
 * Donator-Mainframe communication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Partei } from './Partei';
import {
    ParteiFromJSON,
    ParteiFromJSONTyped,
    ParteiToJSON,
    ParteiToJSONTyped,
} from './Partei';

/**
 * 
 * @export
 * @interface Abgeordneter
 */
export interface Abgeordneter {
    /**
     * 
     * @type {number}
     * @memberof Abgeordneter
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Abgeordneter
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Abgeordneter
     */
    firstname: string;
    /**
     * 
     * @type {string}
     * @memberof Abgeordneter
     */
    profession?: string;
    /**
     * 
     * @type {number}
     * @memberof Abgeordneter
     */
    yearOfBirth: number;
    /**
     * 
     * @type {Partei}
     * @memberof Abgeordneter
     */
    party?: Partei;
}

/**
 * Check if a given object implements the Abgeordneter interface.
 */
export function instanceOfAbgeordneter(value: object): value is Abgeordneter {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('firstname' in value) || value['firstname'] === undefined) return false;
    if (!('yearOfBirth' in value) || value['yearOfBirth'] === undefined) return false;
    return true;
}

export function AbgeordneterFromJSON(json: any): Abgeordneter {
    return AbgeordneterFromJSONTyped(json, false);
}

export function AbgeordneterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Abgeordneter {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'firstname': json['firstname'],
        'profession': json['profession'] == null ? undefined : json['profession'],
        'yearOfBirth': json['yearOfBirth'],
        'party': json['party'] == null ? undefined : ParteiFromJSON(json['party']),
    };
}

export function AbgeordneterToJSON(json: any): Abgeordneter {
    return AbgeordneterToJSONTyped(json, false);
}

export function AbgeordneterToJSONTyped(value?: Abgeordneter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'firstname': value['firstname'],
        'profession': value['profession'],
        'yearOfBirth': value['yearOfBirth'],
        'party': ParteiToJSON(value['party']),
    };
}

