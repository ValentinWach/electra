/* tslint:disable */
/* eslint-disable */
/**
 * Donator-Mainframe communication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WinningPartiesZweitstimmeInner } from './WinningPartiesZweitstimmeInner';
import {
    WinningPartiesZweitstimmeInnerFromJSON,
    WinningPartiesZweitstimmeInnerFromJSONTyped,
    WinningPartiesZweitstimmeInnerToJSON,
    WinningPartiesZweitstimmeInnerToJSONTyped,
} from './WinningPartiesZweitstimmeInner';
import type { WinningPartiesErststimmeInner } from './WinningPartiesErststimmeInner';
import {
    WinningPartiesErststimmeInnerFromJSON,
    WinningPartiesErststimmeInnerFromJSONTyped,
    WinningPartiesErststimmeInnerToJSON,
    WinningPartiesErststimmeInnerToJSONTyped,
} from './WinningPartiesErststimmeInner';

/**
 * 
 * @export
 * @interface WinningParties
 */
export interface WinningParties {
    /**
     * 
     * @type {Array<WinningPartiesErststimmeInner>}
     * @memberof WinningParties
     */
    erststimme: Array<WinningPartiesErststimmeInner>;
    /**
     * 
     * @type {Array<WinningPartiesZweitstimmeInner>}
     * @memberof WinningParties
     */
    zweitstimme: Array<WinningPartiesZweitstimmeInner>;
}

/**
 * Check if a given object implements the WinningParties interface.
 */
export function instanceOfWinningParties(value: object): value is WinningParties {
    if (!('erststimme' in value) || value['erststimme'] === undefined) return false;
    if (!('zweitstimme' in value) || value['zweitstimme'] === undefined) return false;
    return true;
}

export function WinningPartiesFromJSON(json: any): WinningParties {
    return WinningPartiesFromJSONTyped(json, false);
}

export function WinningPartiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): WinningParties {
    if (json == null) {
        return json;
    }
    return {
        
        'erststimme': ((json['erststimme'] as Array<any>).map(WinningPartiesErststimmeInnerFromJSON)),
        'zweitstimme': ((json['zweitstimme'] as Array<any>).map(WinningPartiesZweitstimmeInnerFromJSON)),
    };
}

export function WinningPartiesToJSON(json: any): WinningParties {
    return WinningPartiesToJSONTyped(json, false);
}

export function WinningPartiesToJSONTyped(value?: WinningParties | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'erststimme': ((value['erststimme'] as Array<any>).map(WinningPartiesErststimmeInnerToJSON)),
        'zweitstimme': ((value['zweitstimme'] as Array<any>).map(WinningPartiesZweitstimmeInnerToJSON)),
    };
}

